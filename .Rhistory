knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(EBImage)
image_path <- "C:/Users/gde267.AD/Downloads/danilo2.jpg"
overlay_folder <- "C:/Users/gde267.AD/Downloads/single_image_overlay/"
label_image_path <- "C:/Users/gde267.AD/Downloads/label_ref.jpeg"
label_known_area_cm2 <- 4
if(!dir.exists(overlay_folder)) dir.create(overlay_folder)
my_image <- readImage(image_path)
img_resized <- resize(my_image, w = 800)
display(img_resized, method="raster")
img_norm <- normalize(img_resized)
img_gamma <- img_norm ^ 0.7
display(img_gamma, method="raster")
img_gray <- channel(img_gamma, "gray")
display(img_gray, method="raster")
thr <- otsu(img_gray)
mask_lt <- img_gray < thr
mask_gt <- img_gray > thr
img_bin <- if(mean(mask_lt) < mean(mask_gt)) mask_lt else mask_gt
img_bin <- fillHull(img_bin)
img_bin <- erode(img_bin, makeBrush(5, shape="Gaussian"))
img_bin <- dilate(img_bin, makeBrush(7, shape="Gaussian"))
display(img_bin, method="raster")
img_label <- bwlabel(img_bin)
display(colorLabels(img_label), method="raster")
colony_features <- computeFeatures.shape(img_label)
largest <- which.max(colony_features[,"s.area"])
colony_area_pix <- colony_features[largest, "s.area"]
largest_mask <- img_label == largest
overlay <- paintObjects(largest_mask, toRGB(img_gray), col="red")
display(overlay, method="raster")
cat("Colony area in pixels:", colony_area_pix, "\n")
label_img <- readImage(label_image_path)
img_label <- bwlabel(img_bin)
display(colorLabels(img_label), method="raster")
colony_features <- computeFeatures.shape(img_label)
largest <- which.max(colony_features[,"s.area"])
colony_area_pix <- colony_features[largest, "s.area"]
largest_mask <- img_label == largest
overlay <- paintObjects(largest_mask, toRGB(img_gray), col="red")
display(overlay, method="raster")
cat("Colony area in pixels:", colony_area_pix, "\n")
We now apply the scaling factor to convert colony size into cm².
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
library(EBImage)
image_path <- "C:/Users/gde267.AD/Downloads/Adobe2.jpeg"
overlay_folder <- "C:/Users/gde267.AD/Downloads/single_image_overlay/"
label_image_path <- "C:/Users/gde267.AD/Downloads/label_ref.jpeg"
label_known_area_cm2 <- 4
if(!dir.exists(overlay_folder)) dir.create(overlay_folder)
my_image <- readImage(image_path)
img_resized <- resize(my_image, w = 800)
display(img_resized, method="raster")
img_norm <- normalize(img_resized)
img_gamma <- img_norm ^ 0.7
display(img_gamma, method="raster")
img_gray <- channel(img_gamma, "gray")
display(img_gray, method="raster")
thr <- otsu(img_gray)
mask_lt <- img_gray < thr
mask_gt <- img_gray > thr
img_bin <- if(mean(mask_lt) < mean(mask_gt)) mask_lt else mask_gt
img_bin <- fillHull(img_bin)
img_bin <- erode(img_bin, makeBrush(5, shape="Gaussian"))
img_bin <- dilate(img_bin, makeBrush(7, shape="Gaussian"))
display(img_bin, method="raster")
img_label <- bwlabel(img_bin)
display(colorLabels(img_label), method="raster")
colony_features <- computeFeatures.shape(img_label)
largest <- which.max(colony_features[,"s.area"])
colony_area_pix <- colony_features[largest, "s.area"]
largest_mask <- img_label == largest
overlay <- paintObjects(largest_mask, toRGB(img_gray), col="red")
display(overlay, method="raster")
cat("Colony area in pixels:", colony_area_pix, "\n")
label_img <- readImage(label_image_path)
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(EBImage)
my_image <- readImage(image_path)
img_resized <- resize(my_image, w = 800)
display(img_resized, method="raster")
img_norm <- normalize(img_resized)
img_gamma <- img_norm ^ 1.5
display(img_gamma, method="raster")
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(EBImage)
image_path <- "C:/Users/gde267.AD/Downloads/Adobe2.jpeg"
overlay_folder <- "C:/Users/gde267.AD/Downloads/single_image_overlay/"
label_image_path <- "C:/Users/gde267.AD/Downloads/label_ref.jpeg"
label_known_area_cm2 <- 4
if(!dir.exists(overlay_folder)) dir.create(overlay_folder)
my_image <- readImage(image_path)
img_resized <- resize(my_image, w = 800)
display(img_resized, method="raster")
img_norm <- normalize(img_resized)
img_gamma <- img_norm ^ 1.5
display(img_gamma, method="raster")
display(img_gamma, method="raster")
img_norm <- normalize(img_resized)
img_gamma <- img_norm ^ 1.5
display(img_gamma, method="raster")
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(EBImage)
image_path <- "C:/Users/gde267.AD/Downloads/Adobe2.jpeg"
overlay_folder <- "C:/Users/gde267.AD/Downloads/single_image_overlay/"
label_image_path <- "C:/Users/gde267.AD/Downloads/label_ref.jpeg"
label_known_area_cm2 <- 4
if(!dir.exists(overlay_folder)) dir.create(overlay_folder)
my_image <- readImage(image_path)
img_resized <- resize(my_image, w = 800)
display(img_resized, method="raster")
img_gray <- channel(img_gamma, "gray")
display(img_gray, method="raster")
thr <- otsu(img_gray)
mask_lt <- img_gray < thr
mask_gt <- img_gray > thr
img_bin <- if(mean(mask_lt) < mean(mask_gt)) mask_lt else mask_gt
img_bin <- fillHull(img_bin)
img_bin <- erode(img_bin, makeBrush(5, shape="Gaussian"))
img_bin <- dilate(img_bin, makeBrush(7, shape="Gaussian"))
display(img_bin, method="raster")
img_label <- bwlabel(img_bin)
display(colorLabels(img_label), method="raster")
colony_features <- computeFeatures.shape(img_label)
largest <- which.max(colony_features[,"s.area"])
colony_area_pix <- colony_features[largest, "s.area"]
largest_mask <- img_label == largest
overlay <- paintObjects(largest_mask, toRGB(img_gray), col="red")
display(overlay, method="raster")
cat("Colony area in pixels:", colony_area_pix, "\n")
img_norm <- normalize(img_resized)
img_gamma <- img_norm ^ 1.5
display(img_gamma, method="raster")
thr <- otsu(img_gray)
mask_lt <- img_gray < thr
mask_gt <- img_gray > thr
img_bin <- if(mean(mask_lt) < mean(mask_gt)) mask_lt else mask_gt
img_bin <- fillHull(img_bin)
img_bin <- erode(img_bin, makeBrush(5, shape="Gaussian"))
img_bin <- dilate(img_bin, makeBrush(7, shape="Gaussian"))
display(img_bin, method="raster")
img_norm <- normalize(img_resized)
img_gamma <- img_norm ^ 1.5
display(img_gamma, method="raster")
my_image <- readImage(image_path)
img_resized <- resize(my_image, w = 800)
display(img_resized, method="raster")
img_norm <- normalize(img_resized)
img_gamma <- img_norm ^ 1.5
display(img_gamma, method="raster")
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(EBImage)
image_path <- "C:/Users/gde267.AD/Downloads/Adobe2.jpeg"
overlay_folder <- "C:/Users/gde267.AD/Downloads/single_image_overlay/"
label_image_path <- "C:/Users/gde267.AD/Downloads/label.png"
label_known_area_cm2 <- 4
if(!dir.exists(overlay_folder)) dir.create(overlay_folder)
my_image <- readImage(image_path)
img_resized <- resize(my_image, w = 800)
display(img_resized, method="raster")
img_norm <- normalize(img_resized)
img_gamma <- img_norm ^ 1.5
display(img_gamma, method="raster")
img_gray <- channel(img_gamma, "gray")
display(img_gray, method="raster")
thr <- otsu(img_gray)
mask_lt <- img_gray < thr
mask_gt <- img_gray > thr
img_bin <- if(mean(mask_lt) < mean(mask_gt)) mask_lt else mask_gt
img_bin <- fillHull(img_bin)
img_bin <- erode(img_bin, makeBrush(5, shape="Gaussian"))
img_bin <- dilate(img_bin, makeBrush(7, shape="Gaussian"))
display(img_bin, method="raster")
img_label <- bwlabel(img_bin)
display(colorLabels(img_label), method="raster")
colony_features <- computeFeatures.shape(img_label)
largest <- which.max(colony_features[,"s.area"])
colony_area_pix <- colony_features[largest, "s.area"]
largest_mask <- img_label == largest
overlay <- paintObjects(largest_mask, toRGB(img_gray), col="red")
display(overlay, method="raster")
cat("Colony area in pixels:", colony_area_pix, "\n")
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(EBImage)
image_path <- "C:/Users/gde267.AD/Downloads/Adobe2.jpeg"
overlay_folder <- "C:/Users/gde267.AD/Downloads/single_image_overlay/"
label_image_path <- "C:/Users/gde267.AD/Downloads/label.png"
label_known_area_cm2 <- 4
if(!dir.exists(overlay_folder)) dir.create(overlay_folder)
my_image <- readImage(image_path)
img_resized <- resize(my_image, w = 800)
display(img_resized, method="raster")
img_norm <- normalize(img_resized)
img_gamma <- img_norm ^ 1.5
display(img_gamma, method="raster")
img_gray <- channel(img_gamma, "gray")
display(img_gray, method="raster")
thr <- otsu(img_gray)
mask_lt <- img_gray < thr
mask_gt <- img_gray > thr
img_bin <- if(mean(mask_lt) < mean(mask_gt)) mask_lt else mask_gt
img_bin <- fillHull(img_bin)
img_bin <- erode(img_bin, makeBrush(5, shape="Gaussian"))
img_bin <- dilate(img_bin, makeBrush(7, shape="Gaussian"))
display(img_bin, method="raster")
label_img <- readImage(label_image_path)
label_img <- resize(label_img, w = 800)
label_img <- normalize(label_img)
label_img <- label_img ^ 1
label_gray <- channel(label_img, "gray")
display(label_gray, method="raster")
thr <- otsu(label_gray)
mask_lt <- label_gray < thr
mask_gt <- label_gray > thr
label_bin <- if(mean(mask_lt) < mean(mask_gt)) mask_lt else mask_gt
label_bin <- fillHull(label_bin)
label_bin <- erode(label_bin, makeBrush(5, shape="disc"))
label_bin <- dilate(label_bin, makeBrush(5, shape="disc"))
display(label_bin, method="raster")
label_label <- bwlabel(label_bin)
label_features <- computeFeatures.shape(label_label)
largest_label <- which.max(label_features[,"s.area"])
label_area_pix <- label_features[largest_label, "s.area"]
pixel_to_cm2 <- label_known_area_cm2 / label_area_pix
cat("Reference label area in pixels:", label_area_pix, "\n")
cat("Pixels → cm² factor:", pixel_to_cm2, "\n")
colony_area_cm2 <- colony_area_pix * pixel_to_cm2
cat("Colony area in cm²:", colony_area_cm2, "\n")
overlay_filename <- file.path(overlay_folder,
paste0(tools::file_path_sans_ext(basename(image_path)), "_overlay.png"))
writeImage(overlay, overlay_filename)
cat("Overlay image saved to:", overlay_filename, "\n")
colony_area_cm2 <- colony_area_pix * pixel_to_cm2
cat("Colony area in cm²:", colony_area_cm2, "\n")
overlay_filename <- file.path(overlay_folder,
paste0(tools::file_path_sans_ext(basename(image_path)), "_overlay.png"))
writeImage(overlay, overlay_filename)
cat("Overlay image saved to:", overlay_filename, "\n")
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(EBImage)
knitr::opts_chunk$set(
echo = FALSE,
message = FALSE,
warning = FALSE
)
library(EBImage)
image_path <- "C:/Users/gde267.AD/Downloads/Adobe2.jpeg"
overlay_folder <- "C:/Users/gde267.AD/Downloads/single_image_overlay/"
label_image_path <- "C:/Users/gde267.AD/Downloads/label.png"
label_known_area_cm2 <- 4
if(!dir.exists(overlay_folder)) dir.create(overlay_folder)
my_image <- readImage(image_path)
img_resized <- resize(my_image, w = 800)
display(img_resized, method="raster")
library(EBImage)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(EBImage)
image_path <- "C:/Users/gde267.AD/Downloads/Adobe2.jpeg"
overlay_folder <- "C:/Users/gde267.AD/Downloads/single_image_overlay/"
label_image_path <- "C:/Users/gde267.AD/Downloads/label.png"
label_known_area_cm2 <- 4
if(!dir.exists(overlay_folder)) dir.create(overlay_folder)
my_image <- readImage(image_path)
img_resized <- resize(my_image, w = 800)
display(img_resized, method="raster")
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(EBImage)
image_path <- "C:/Users/gde267.AD/Downloads/Adobe2.jpeg"
overlay_folder <- "C:/Users/gde267.AD/Downloads/single_image_overlay/"
label_image_path <- "C:/Users/gde267.AD/Downloads/label.png"
label_known_area_cm2 <- 4
if(!dir.exists(overlay_folder)) dir.create(overlay_folder)
my_image <- readImage(image_path)
img_resized <- resize(my_image, w = 800)
display(img_resized, method="raster")
img_norm <- normalize(img_resized)
img_gamma <- img_norm ^ 1.5
display(img_gamma, method="raster")
img_gray <- channel(img_gamma, "gray")
display(img_gray, method="raster")
thr <- otsu(img_gray)
mask_lt <- img_gray < thr
mask_gt <- img_gray > thr
img_bin <- if(mean(mask_lt) < mean(mask_gt)) mask_lt else mask_gt
img_bin <- fillHull(img_bin)
img_bin <- erode(img_bin, makeBrush(5, shape="Gaussian"))
img_bin <- dilate(img_bin, makeBrush(7, shape="Gaussian"))
display(img_bin, method="raster")
img_label <- bwlabel(img_bin)
display(colorLabels(img_label), method="raster")
colony_features <- computeFeatures.shape(img_label)
largest <- which.max(colony_features[,"s.area"])
colony_area_pix <- colony_features[largest, "s.area"]
largest_mask <- img_label == largest
overlay <- paintObjects(largest_mask, toRGB(img_gray), col="red")
display(overlay, method="raster")
cat("Colony area in pixels:", colony_area_pix, "\n")
label_img <- readImage(label_image_path)
label_img <- resize(label_img, w = 800)
label_img <- normalize(label_img)
label_img <- label_img ^ 1
label_gray <- channel(label_img, "gray")
display(label_gray, method="raster")
thr <- otsu(label_gray)
mask_lt <- label_gray < thr
mask_gt <- label_gray > thr
label_bin <- if(mean(mask_lt) < mean(mask_gt)) mask_lt else mask_gt
label_bin <- fillHull(label_bin)
label_bin <- erode(label_bin, makeBrush(5, shape="disc"))
label_bin <- dilate(label_bin, makeBrush(5, shape="disc"))
display(label_bin, method="raster")
label_label <- bwlabel(label_bin)
label_features <- computeFeatures.shape(label_label)
largest_label <- which.max(label_features[,"s.area"])
label_area_pix <- label_features[largest_label, "s.area"]
pixel_to_cm2 <- label_known_area_cm2 / label_area_pix
cat("Reference label area in pixels:", label_area_pix, "\n")
cat("Pixels → cm² factor:", pixel_to_cm2, "\n")
colony_area_cm2 <- colony_area_pix * pixel_to_cm2
cat("Colony area in cm²:", colony_area_cm2, "\n")
overlay_filename <- file.path(overlay_folder,
paste0(tools::file_path_sans_ext(basename(image_path)), "_overlay.png"))
writeImage(overlay, overlay_filename)
cat("Overlay image saved to:", overlay_filename, "\n")
setwd("C:/Users/gde267.AD/OneDrive - University of Kentucky/Desktop/University of Kentucky PhD/Fungicide Resistance/Image Analysis")
